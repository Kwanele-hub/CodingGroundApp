{"ast":null,"code":"var _jsxFileName = \"/home/tcg/my-workspace/CodingGroundApp/tcg-app/frontend/src/components/UpdateForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useSelector } from \"react\";\nimport { Table } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UpdateForm() {\n  _s();\n\n  const progress = useSelector(state => state.form.form);\n  const [isEditable, setIsEditable] = useState(false);\n\n  const openEditForm = id => {\n    return progress.find(learner => {\n      if (learner.id === id) {\n        setIsEditable(!isEditable);\n      }\n\n      return learner;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"display-table\",\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      dark: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Surname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employees.length > 0 && employees.map(employee => {\n          const {\n            id,\n            name,\n            surname,\n            progress,\n            isCompleted\n          } = employee;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: `${isCompleted ? \"complete\" : \"\"} `,\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: surname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: isEditable ? progress : /*#__PURE__*/_jsxDEV(EditProgress, { ...employee\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 46\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"display-button\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => completeAndGetEmployees(id),\n                  children: \"Complete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => openEditForm(id),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => dispatch(deleteEmployee(id)),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 21\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpdateForm, \"e56Xvi+vfiNQz1RY5zgIvpEC7xI=\", false, function () {\n  return [useSelector];\n});\n\n_c = UpdateForm;\nexport default UpdateForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateForm\");","map":{"version":3,"sources":["/home/tcg/my-workspace/CodingGroundApp/tcg-app/frontend/src/components/UpdateForm.js"],"names":["React","useState","useSelector","Table","UpdateForm","progress","state","form","isEditable","setIsEditable","openEditForm","id","find","learner","employees","length","map","employee","name","surname","isCompleted","completeAndGetEmployees","dispatch","deleteEmployee"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,KAAT,QAAsB,YAAtB;;;AAGA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAMC,QAAQ,GAAGH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWA,IAAvB,CAA5B;AACF,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;;AACE,QAAMS,YAAY,GAAIC,EAAD,IAAQ;AAC3B,WAAON,QAAQ,CAACO,IAAT,CAAeC,OAAD,IAAa;AAChC,UAAIA,OAAO,CAACF,EAAR,KAAeA,EAAnB,EAAuB;AACrBF,QAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACD;;AACD,aAAOK,OAAP;AACD,KALM,CAAP;AAMD,GAPD;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,IAAI,MAAX;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAA,kBACGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IACCD,SAAS,CAACE,GAAV,CAAeC,QAAD,IAAc;AAC1B,gBAAM;AAAEN,YAAAA,EAAF;AAAMO,YAAAA,IAAN;AAAYC,YAAAA,OAAZ;AAAqBd,YAAAA,QAArB;AAA+Be,YAAAA;AAA/B,cAA+CH,QAArD;AAEA,8BACE;AAAa,YAAA,SAAS,EAAG,GAAEG,WAAW,GAAG,UAAH,GAAgB,EAAG,GAAzD;AAAA,oCACE;AAAA,wBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,wBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA,wBACGX,UAAU,GAAGH,QAAH,gBAAc,QAAC,YAAD,OAAkBY;AAAlB;AAAA;AAAA;AAAA;AAAA;AAD3B;AAAA;AAAA;AAAA;AAAA,oBAHF,eAOI;AAAK,cAAA,SAAS,EAAC,gBAAf;AAAA,sCACE;AAAA,uCACE;AAAQ,kBAAA,OAAO,EAAE,MAAMI,uBAAuB,CAACV,EAAD,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAME;AAAA,wCACE;AAAQ,kBAAA,OAAO,EAAE,MAAMD,YAAY,CAACC,EAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAGE;AAAQ,kBAAA,OAAO,EAAE,MAAMW,QAAQ,CAACC,cAAc,CAACZ,EAAD,CAAf,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ;AAAA,aAASA,EAAT;AAAA;AAAA;AAAA;AAAA,kBADF;AAyBD,SA5BD;AAFJ;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+CD;;GA1DQP,U;UACUF,W;;;KADVE,U;AA4DT,eAAeA,UAAf","sourcesContent":["import React, { useState, useSelector } from \"react\";\nimport { Table } from \"reactstrap\";\n\n\nfunction UpdateForm() {\n  const progress = useSelector((state) => state.form.form);\nconst [isEditable, setIsEditable] = useState(false);\n  const openEditForm = (id) => {\n    return progress.find((learner) => {\n      if (learner.id === id) {\n        setIsEditable(!isEditable);\n      }\n      return learner;\n    });\n  };\n  return (\n    <div className=\"display-table\">\n      <Table dark>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Surname</th>\n            <th>Progress</th>\n            <th></th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {employees.length > 0 &&\n            employees.map((employee) => {\n              const { id, name, surname, progress, isCompleted } = employee;\n\n              return (\n                <tr key={id} className={`${isCompleted ? \"complete\" : \"\"} `}>\n                  <td>{name}</td>\n                  <td>{surname}</td>\n                  <td>\n                    {isEditable ? progress : <EditProgress {...employee} />}\n                  </td>\n                  {\n                    <div className=\"display-button\">\n                      <div>\n                        <button onClick={() => completeAndGetEmployees(id)}>\n                          Complete\n                        </button>\n                      </div>\n                      <div>\n                        <button onClick={() => openEditForm(id)}>Edit</button>\n\n                        <button onClick={() => dispatch(deleteEmployee(id))}>\n                          Delete\n                        </button>\n                      </div>\n                    </div>\n                  }\n                </tr>\n              );\n            })}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n\nexport default UpdateForm;"]},"metadata":{},"sourceType":"module"}