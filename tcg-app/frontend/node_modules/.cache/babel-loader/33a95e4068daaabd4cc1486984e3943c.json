{"ast":null,"code":"var _jsxFileName = \"/home/tcg/my-workspace/CodingGroundApp/tcg-app/frontend/src/components/UpdateForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useSelector } from \"react\";\nimport { Table } from \"reactstrap\";\nimport Edit from \"./Edit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UpdateForm() {\n  _s();\n\n  // const progress = useSelector((state) => state.form.form);\n  const [isEditable, setIsEditable] = useState(false);\n\n  const openEditForm = id => {\n    return progress.find(learner => {\n      if (learner.id === id) {\n        setIsEditable(!isEditable);\n      }\n\n      return learner;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"display-table\",\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      dark: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"FreeCodeCamp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"CodeWars\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Typing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: progress.length > 0 && progress.map(learner => {\n          const {\n            id,\n            name,\n            surname,\n            isCompleted\n          } = learner;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: `${isCompleted ? \"complete\" : \"\"} `,\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: surname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: isEditable ? progress : /*#__PURE__*/_jsxDEV(Edit, { ...learner\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 46\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"display-button\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => id,\n                  children: \"Complete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => openEditForm(id),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => id,\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 21\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpdateForm, \"XR8qrCeMXdvZ6hXvpL0FK6Kbqdw=\");\n\n_c = UpdateForm;\nexport default UpdateForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateForm\");","map":{"version":3,"sources":["/home/tcg/my-workspace/CodingGroundApp/tcg-app/frontend/src/components/UpdateForm.js"],"names":["React","useState","useSelector","Table","Edit","UpdateForm","isEditable","setIsEditable","openEditForm","id","progress","find","learner","length","map","name","surname","isCompleted"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAGA,SAASC,UAAT,GAAsB;AAAA;;AACpB;AACF,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,KAAD,CAA5C;;AACE,QAAMO,YAAY,GAAIC,EAAD,IAAQ;AAC3B,WAAOC,QAAQ,CAACC,IAAT,CAAeC,OAAD,IAAa;AAChC,UAAIA,OAAO,CAACH,EAAR,KAAeA,EAAnB,EAAuB;AACrBF,QAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACD;;AACD,aAAOM,OAAP;AACD,KALM,CAAP;AAMD,GAPD;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,IAAI,MAAX;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAA,kBACGF,QAAQ,CAACG,MAAT,GAAkB,CAAlB,IACCH,QAAQ,CAACI,GAAT,CAAcF,OAAD,IAAa;AACxB,gBAAM;AAAEH,YAAAA,EAAF;AAAMM,YAAAA,IAAN;AAAYC,YAAAA,OAAZ;AAAqBC,YAAAA;AAArB,cAAqCL,OAA3C;AAEA,8BACE;AAAa,YAAA,SAAS,EAAG,GAAEK,WAAW,GAAG,UAAH,GAAgB,EAAG,GAAzD;AAAA,oCACE;AAAA,wBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,wBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA,wBACGV,UAAU,GAAGI,QAAH,gBAAc,QAAC,IAAD,OAAUE;AAAV;AAAA;AAAA;AAAA;AAAA;AAD3B;AAAA;AAAA;AAAA;AAAA,oBAHF,eAOI;AAAK,cAAA,SAAS,EAAC,gBAAf;AAAA,sCACE;AAAA,uCACE;AAAQ,kBAAA,OAAO,EAAE,MAAOH,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAME;AAAA,wCACE;AAAQ,kBAAA,OAAO,EAAE,MAAMD,YAAY,CAACC,EAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAGE;AAAQ,kBAAA,OAAO,EAAE,MAAQA,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ;AAAA,aAASA,EAAT;AAAA;AAAA;AAAA;AAAA,kBADF;AAyBD,SA5BD;AAFJ;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgDD;;GA3DQJ,U;;KAAAA,U;AA6DT,eAAeA,UAAf","sourcesContent":["import React, { useState, useSelector } from \"react\";\nimport { Table } from \"reactstrap\";\nimport Edit from \"./Edit\";\n\n\nfunction UpdateForm() {\n  // const progress = useSelector((state) => state.form.form);\nconst [isEditable, setIsEditable] = useState(false);\n  const openEditForm = (id) => {\n    return progress.find((learner) => {\n      if (learner.id === id) {\n        setIsEditable(!isEditable);\n      }\n      return learner;\n    });\n  };\n  return (\n    <div className=\"display-table\">\n      <Table dark>\n        <thead>\n          <tr>\n            <th>FreeCodeCamp</th>\n            <th>CodeWars</th>\n            <th>Typing</th>\n            <th></th>\n            <th></th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {progress.length > 0 &&\n            progress.map((learner) => {\n              const { id, name, surname, isCompleted } = learner;\n\n              return (\n                <tr key={id} className={`${isCompleted ? \"complete\" : \"\"} `}>\n                  <td>{name}</td>\n                  <td>{surname}</td>\n                  <td>\n                    {isEditable ? progress : <Edit {...learner} />}\n                  </td>\n                  {\n                    <div className=\"display-button\">\n                      <div>\n                        <button onClick={() => (id)}>\n                          Complete\n                        </button>\n                      </div>\n                      <div>\n                        <button onClick={() => openEditForm(id)}>Edit</button>\n\n                        <button onClick={() => ((id))}>\n                          Delete\n                        </button>\n                      </div>\n                    </div>\n                  }\n                </tr>\n              );\n            })}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n\nexport default UpdateForm;"]},"metadata":{},"sourceType":"module"}