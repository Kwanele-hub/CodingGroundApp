{"ast":null,"code":"var _jsxFileName = \"/home/tcg/my-workspace/CodingGroundApp/tcg-app/frontend/src/components/UpdateForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useSelector } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UpdateForm = ({\n  freeCodeCamp,\n  typing,\n  codeWars,\n  blogPost,\n  remove,\n  id,\n  complete\n}) => {\n  _s();\n\n  const [edit, setEdit] = useState(false);\n  const [update, setUpdate] = useState(freeCodeCamp, typing, blogPost, codeWars);\n  const Form = useSelector(state => state.items.update);\n\n  const handleEditSubmit = id => {\n    let newObj = Form.find(newItem => newItem.id === id);\n    newObj.freeCodeCamp = update;\n    return editItem(newObj);\n  };\n\n  const handleEditChange = e => {\n    setUpdate(e.target.value);\n  };\n\n  const handleEdit = () => {\n    setEdit(!edit);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"item\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"freeCodeCamp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"typing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"codeWars\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"blogPost\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: freeCodeCamp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: blogPost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: codeWars\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"typing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteItem(remove(id)),\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this), (freeCodeCamp, blogPost, codeWars, typing.id), !edit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: (freeCodeCamp, blogPost, codeWars, typing.task)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEdit,\n          disabled: (freeCodeCamp, codeWars, typing, blogPost.completed),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: update,\n          name: \"update\",\n          onChange: handleEditChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEdit,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: () => handleEditSubmit(id),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => completeItem(complete(id)),\n        children: \"complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 2\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateForm, \"2k/CKpylnZq5TfD/l9k3tR+qhGc=\", false, function () {\n  return [useSelector];\n});\n\n_c = UpdateForm;\nexport default UpdateForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateForm\");","map":{"version":3,"sources":["/home/tcg/my-workspace/CodingGroundApp/tcg-app/frontend/src/components/UpdateForm.js"],"names":["React","useState","useSelector","UpdateForm","freeCodeCamp","typing","codeWars","blogPost","remove","id","complete","edit","setEdit","update","setUpdate","Form","state","items","handleEditSubmit","newObj","find","newItem","editItem","handleEditChange","e","target","value","handleEdit","deleteItem","task","completed","completeItem"],"mappings":"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","sourcesContent":["import React, {useState, useSelector} from 'react'\n\n\n\n\nconst UpdateForm = ({freeCodeCamp, typing, codeWars, blogPost,remove ,id, complete,}) => {\n  const [edit,setEdit] = useState(false);\n  const [update,setUpdate] = useState(freeCodeCamp, typing, blogPost, codeWars)\n  const Form = useSelector(state =>state.items.update)\n  \n\nconst handleEditSubmit = (id) => {\nlet newObj = Form.find(newItem => newItem.id === id )\nnewObj.freeCodeCamp = update\nreturn (editItem(newObj))\n\n\n  }\nconst handleEditChange = (e) => {\n    setUpdate(e.target.value);\n  };\n  const handleEdit = () => {\n    setEdit(!edit);\n  };\n\n\n\n  return(\n    <div>\n <li className='item'>\n     <table>\n       <tbody>\n         \n       <tr>\n            <th>freeCodeCamp</th>\n          <th>typing</th>\n          <th>codeWars</th>\n          <th>blogPost</th>\n          \n            </tr>\n    <td>{freeCodeCamp}</td>\n    <td>{blogPost}</td>\n    <td>{codeWars}</td>\n    <td>typing</td>\n       </tbody>\n           \n        </table>\n    \n    <button onClick={()=> (deleteItem(remove(id)))}>delete</button>\n    {freeCodeCamp, blogPost, codeWars, typing.id}\n      {!edit ? (\n        <>\n      \n          <span>{freeCodeCamp, blogPost, codeWars, typing.task}</span>{\" \"}\n          <button onClick={handleEdit} disabled={freeCodeCamp,codeWars,typing,blogPost.completed}>\n            Edit\n          </button>\n        </>\n      ) : (\n        <>\n          {\" \"}\n          <input\n            type=\"text\"\n            value={update}\n            name=\"update\"\n            onChange={handleEditChange}\n          />\n          <button onClick={handleEdit}>Cancel</button>\n          <button type=\"submit\" onClick={() => handleEditSubmit(id)}>\n            Save\n          </button>\n        </>\n      )}\n    \n    <button onClick={()=>  (completeItem(complete(id)))}>complete</button>\n    \n  </li>\n  \n    </div>\n  )\n}\n\nexport default UpdateForm"]},"metadata":{},"sourceType":"module"}